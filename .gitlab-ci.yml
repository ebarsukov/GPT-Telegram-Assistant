stages:
  - test
  - docker build and push

variables:
  DOCKER_REGISTRY_NAMESPACE: ebarsukov

pylint:
  stage: test
  image: python:3.10-slim-buster
  before_script:
    - pip install -r requirements.txt
    - pip install -r requirements-dev.txt
  script:
    - pylint ./app
  only:
    - candidate
    - main

docker push develop:
  stage: docker build and push
  image: docker:latest
  services:
    - docker:dind
  script:
    - NAME=$(cat app/name)
    - docker build -t ${DOCKER_REGISTRY_NAMESPACE}/${NAME}:develop -f docker/Dockerfile .
    - docker push ${DOCKER_REGISTRY_NAMESPACE}/${NAME}:develop
  before_script:
    - echo -n ${DOCKER_PASS} | docker login -u ${DOCKER_REGISTRY_NAMESPACE} --password-stdin
  when: manual


docker push candidate:
  stage: docker build and push
  image: docker
  services:
    - docker:dind
  script:
    - NAME=$(cat app/name)
    - docker build -t ebarsukov/${NAME}:candidate -f docker/Dockerfile .
    - docker push ${DOCKER_REGISTRY_NAMESPACE}/${NAME}:candidate
  before_script:
    - echo -n ${DOCKER_PASS} | docker login -u ${DOCKER_REGISTRY_NAMESPACE} --password-stdin
  only:
    - candidate

docker push latest:
  stage: docker build and push
  image: docker
  services:
    - docker:dind
  script:
    - NAME=$(cat app/name)
    - docker build -t ebarsukov/${NAME}:latest -f docker/Dockerfile .
    - docker push ${DOCKER_REGISTRY_NAMESPACE}/${NAME}:candidate
  before_script:
    - echo -n ${DOCKER_PASS} | docker login -u ${DOCKER_REGISTRY_NAMESPACE} --password-stdin
  only:
    - tag

docker push version:
  stage: docker build and push
  image: docker
  services:
    - docker:dind
  script:
    - NAME=$(cat app/name)
    - VERSION=$(cat app/version)
    - docker build -t ebarsukov/${NAME}:$(VERSION) -f docker/Dockerfile .
    - docker push ${DOCKER_REGISTRY_NAMESPACE}/${NAME}:$(VERSION)
  before_script:
    - echo -n ${DOCKER_PASS} | docker login -u ${DOCKER_REGISTRY_NAMESPACE} --password-stdin
  only:
    - tag
